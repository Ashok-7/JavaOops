PROBLEM1

package university;
import java.util.ArrayList;

public class University {
	private String name;
	ArrayList<String> professors = new ArrayList<String>(); 
	
	University(String name)
	{
		this.name=name;
	}
	void addProfessor(String name)
	{
		professors.add(name);
	}
	int findProfCount()
	{
		return professors.size();
	}
	double calcUtilization(String name)
	{
		return ((double)(sessionCount)/(totalDaysWorked*4))*100;
	}
}

class Professor extends University{
	private String profName;
	private Course course;
	private double totalDaysWorked;
	private int sessionCount;
	
	Professor(String profName,Course course)
	{
		this.profName=profName;
		this.course=course;
	}
	void setTotalDaysWorked(double totalDaysWorked)
	{
		this.totalDaysWorked=totalDaysWorked;
	}
	void setSessionCount(int sessionCount)
	{
		this.sessionCount=sessionCount;
	}
	double getTotalDaysWorked()
	{
		return totalDaysWorked;
	}
	int getSessionCount()
	{
		return sessionCount;
	}
}

class Course extends Professor{
	private String courseName;
	private int courseDuration;
	
	Course(String courseName,int courseDuration)
	{
		this.courseName=courseName;
		this.courseDuration=courseDuration;
	}	
	String getCourseName()
	{
		return courseName;
	}
	int getCourseDuration()
	{
		return courseDuration;
	}
}

PROBLEM2
package university;

import java.util.ArrayList;

public class Hotel {
	private String name;
	private String city;
	ArrayList<String> rooms = new ArrayList<String>(); 
	ArrayList<String> bookings = new ArrayList<String>(); 

	
	void addRoom(String type,double dailyRent,boolean hasSeaView)
	{
		rooms.add();
	}
	double bookRoom(int roomNo,String guestName,String guestEmail,int noOfDays)
	{
		if (occupanyStatus=true)
			System.out.println("-1");
		else
			return guestBill;
	}
	int searchRoom(String type,boolean hasSeaView)
	{
		if (occupanyStatus=false) && (hasSeaView==true)
			return rooms.size();			
	}
	public searchRoom(double dailyrent)
	{
		
	}
}
class Booking extends Hotel{
	 private int roomNo;
	 private String guestName;
	 private String guestEmail;
	 private int noOfDays;
	 private double guestBill;
	 
	 Booking(int roomNo,String guestName,String guestEmail,int noOfDays,double guestBill)
	 {
		 this.roomNo=roomNo;
		 this.guestName=guestName;
		 this.guestEmail=guestEmail;
		 this.noOfDays=noOfDays;
		 this.guestBill=guestBill;
	 }
	 int getRoomNo()
		{
			return roomNo;
		}
	 String getGuestName()
	 {
		 return guestName;
	 }
	 String getGuestEmail()
	 {
		 return guestEmail;
	 }
	 int getNoOfDays()
	 {
		 return noOfDays;
	 }
	 double getGuestBill()
	 {
		 return guestBill;
	 }
}
 
class Room extends Hotel{
	private int roomNo;
	private String type;
	private double dailyRent;
	private boolean hasSeaView;
	private boolean occupancyStatus;
	
	Room(int roomNo,String type,double dailyRent,boolean hasSeaView,boolean occupancyStatus)
	{
		this.roomNo=roomNo;
		this.type=type;
		this.dailyRent=dailyRent;
		this.hasSeaView=hasSeaView;
		this.occupancyStatus=occupancyStatus;
	}
	
	int getRoomNo()
	{
		return roomNo;
	}
	String getType()
	{
		return type;
	}
	double getDailyRent()
	{
		return dailyRent;
	}
	boolean hasSeaView()
	{
		return hasSeaView;
	}
	boolean getOccupancyStatus()
	{
		return occupancyStatus;
	}
	
}
PROBLEM3
package university;

class Team{
	String teamName;
	Player[] playerList;
	double noOfOversFaced;
	
	public Team(String teamName,Player[] playerList,double noOfOversFaced)
	{
		this.teamName=teamName;
		this.playerList=playerList;
		this.noOfOversFaced=noOfOversFaced;
	}
	public String getTeamName()
	{
		return teamName;
	}
	public Player[] getPlayerList()
	{
		return playerList;
	}
	public double getNoOfOversFaced()
	{
		return noOfOversFaced;
	}
	public void setTeamName(String teamName)
	{
		this.teamName=teamName;
	}
	public void setNoOfOversFaced(double noOfOversFaced)
	{
		this.noOfOversFaced=noOfOversFaced;
	}
	public void addPlayer()
	{
		
	}
	
}

 class Match extends Team {
	private String matchName; 
	private Team teamObj1;
	private Team teamObj2;

	
	public Match(String matchName)
	{
		this.matchName=matchName;
	}
	public String getMatchName()
	{
		return matchName;
	}
	public Team getTeam1()
	{
		return teamObj1;
	}
	public Team getTeam2()
	{
		return teamObj2;
	}
	public void setTeam1(Team teamObj1)
	{
		this.teamObj1=teamObj1;
	}
	public void setTeam2(Team teamObj2)
	{
		this.teamObj2=teamObj2;
	}
	public int findNumberOfCenturiesInAMatch()
	{ int count=0;
	for(int i=0;i<;i++)
	{
		if (runsScored>==100)
			count++;
	}		
	return count;
	}
	public int findWicketsTakenByTheTeam(String teamName)
	{ 
		return wicketsTaken;
	}
	public Player findPlayerWithMaximumWickets()
	{
		return wicketsTaken;
	}

}


class Player extends Team{
	private String playerName;
	private int runsScored;
	private int wicketsTaken;
	private double oversBowled;
	private int sixTaken;
	
	public Player(String playerName,int runsScored,int wicketsTaken,double oversBowled,int sixTaken)
	{
		this.playerName=playerName;
		this.runsScored=runsScored;
		this.wicketsTaken=wicketsTaken;
		this.oversBowled=oversBowled;
		this.sixTaken=sixTaken;
	}
	public String getPlayerName()
	{
		return playerName;
	}
	public int getRunsScored()
	{
		return runsScored;
	}
	public int getWicketsTaken()
	{
		return wicketsTaken;
	}
	public double getOversBowled()
	{
		return oversBowled;
	}
	public int getSixTaken()
	{
		return sixTaken;
	}
	public void setPlayerName(String playerName)
	{
		this.playerName=playerName;
	}
	public void setRunsScored(int runsScored)
	{
		this.runsScored=runsScored;
	}
	public void setWicketsTaken(int wicketsTaken)
	{
		this.wicketsTaken=wicketsTaken;
	}
	public void setOversBowled(double oversBowled)
	{
		this.oversBowled=oversBowled;
	}
	public void setSixTaken(int sixTaken)
	{
		this.sixTaken=sixTaken;
	}	
}
